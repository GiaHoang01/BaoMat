/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Gui;

import Dao.KhachHangDao;
import Pojo.Connect;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.CallableStatement;
import Pojo.KhachHang;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
/**
 *
 * @author HUU KHANH
 */
public class formKhachHang extends javax.swing.JPanel {

    /**
     * Creates new form formKhachHang
     */

    public formKhachHang() {
        
        initComponents();

        hienThi();
        txt_MaKhachHang.enable(false);
    }
    private void hienThi()
    {
        ArrayList<KhachHang> ds=KhachHangDao.layDanhSachKhachHang();
        DefaultTableModel dtm=new DefaultTableModel();
        dtm.addColumn("Mã khách hàng");
        dtm.addColumn("Số CMND");
        dtm.addColumn("Tên khách hàng");
        dtm.addColumn("SDT");
        dtm.addColumn("Giới tính");
        dtm.setNumRows(ds.size());
        for(int i=0;i<ds.size();i++)
        {
            KhachHang ls=ds.get(i);
            dtm.setValueAt(ls.getMaKH(), i, 0);
            dtm.setValueAt(ls.getSoCMND(),i, 1);
            dtm.setValueAt(ls.getTenKH(), i,2 );
            dtm.setValueAt(ls.getSDT(), i, 3);
            dtm.setValueAt(ls.getGioiTinh(), i, 4);
        }
        tbl_KhachHang.setModel(dtm);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        btnGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_KhachHang = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txt_MaKhachHang = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_CMND = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_TenKhachHang = new javax.swing.JTextField();
        txt_SoDT = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btn_Them = new javax.swing.JButton();
        btn_Xoa = new javax.swing.JButton();
        btn_Sua = new javax.swing.JButton();
        txt_Search = new javax.swing.JTextField();
        btn_Tim = new javax.swing.JButton();
        rdo_Nu = new javax.swing.JRadioButton();
        rdo_Nam = new javax.swing.JRadioButton();
        btn_LamMoi = new javax.swing.JButton();
        nb_key = new javax.swing.JSpinner();
        btn_Encrypt = new javax.swing.JButton();
        btn_Decrypt = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        rdo_GiaoDien = new javax.swing.JRadioButton();
        rdo_Ham = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("Khách hàng");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 8, -1, -1));

        tbl_KhachHang.setForeground(new java.awt.Color(153, 0, 0));
        tbl_KhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MaKH", "TenKH", "Số CMND", "SDT", "Giới Tính"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl_KhachHang.setPreferredSize(new java.awt.Dimension(700, 500));
        tbl_KhachHang.setRowHeight(40);
        tbl_KhachHang.setSelectionBackground(new java.awt.Color(153, 0, 0));
        tbl_KhachHang.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tbl_KhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_KhachHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_KhachHang);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 305, 1421, 392));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("Mã khách hàng :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 84, -1, -1));

        txt_MaKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_MaKhachHangActionPerformed(evt);
            }
        });
        add(txt_MaKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 82, 350, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 0));
        jLabel3.setText("Tên khách hàng :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 130, -1, -1));

        txt_CMND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_CMNDActionPerformed(evt);
            }
        });
        add(txt_CMND, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 172, 350, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 0));
        jLabel4.setText("Key:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 93, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 0));
        jLabel5.setText("Số điện thoại :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(758, 84, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 0));
        jLabel6.setText("Giới tính :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(758, 125, -1, -1));
        add(txt_TenKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 130, 350, 30));

        txt_SoDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SoDTActionPerformed(evt);
            }
        });
        add(txt_SoDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(907, 82, 368, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 0, 0));
        jLabel9.setText("Tìm Kiếm :");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(758, 166, -1, -1));

        btn_Them.setBackground(new java.awt.Color(0, 255, 51));
        btn_Them.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_Them.setForeground(new java.awt.Color(255, 255, 255));
        btn_Them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Anh/add.png"))); // NOI18N
        btn_Them.setText("Thêm");
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemActionPerformed(evt);
            }
        });
        add(btn_Them, new org.netbeans.lib.awtextra.AbsoluteConstraints(907, 208, -1, 40));

        btn_Xoa.setBackground(new java.awt.Color(255, 0, 0));
        btn_Xoa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_Xoa.setForeground(new java.awt.Color(255, 255, 255));
        btn_Xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Anh/xoa.png"))); // NOI18N
        btn_Xoa.setText("Xóa");
        btn_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaActionPerformed(evt);
            }
        });
        add(btn_Xoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(1034, 208, 100, 40));

        btn_Sua.setBackground(new java.awt.Color(0, 51, 255));
        btn_Sua.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_Sua.setForeground(new java.awt.Color(255, 255, 255));
        btn_Sua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Anh/sua.png"))); // NOI18N
        btn_Sua.setText("Sửa");
        btn_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SuaActionPerformed(evt);
            }
        });
        add(btn_Sua, new org.netbeans.lib.awtextra.AbsoluteConstraints(1177, 208, 100, 40));

        txt_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SearchActionPerformed(evt);
            }
        });
        txt_Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_SearchKeyPressed(evt);
            }
        });
        add(txt_Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(907, 164, 368, 30));

        btn_Tim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Anh/search.png"))); // NOI18N
        btn_Tim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimActionPerformed(evt);
            }
        });
        add(btn_Tim, new org.netbeans.lib.awtextra.AbsoluteConstraints(1293, 164, 40, 30));

        buttonGroup1.add(rdo_Nu);
        rdo_Nu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdo_Nu.setForeground(new java.awt.Color(153, 0, 0));
        rdo_Nu.setText("Nữ");
        add(rdo_Nu, new org.netbeans.lib.awtextra.AbsoluteConstraints(1116, 118, 120, 40));

        buttonGroup1.add(rdo_Nam);
        rdo_Nam.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdo_Nam.setForeground(new java.awt.Color(153, 0, 0));
        rdo_Nam.setText("Nam");
        add(rdo_Nam, new org.netbeans.lib.awtextra.AbsoluteConstraints(907, 118, 120, 40));

        btn_LamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Anh/reset_1.png"))); // NOI18N
        btn_LamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LamMoiActionPerformed(evt);
            }
        });
        add(btn_LamMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(1295, 208, 38, 40));
        add(nb_key, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 212, 70, 30));

        btn_Encrypt.setText("Mã hóa");
        btn_Encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EncryptActionPerformed(evt);
            }
        });
        add(btn_Encrypt, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, 100, 34));

        btn_Decrypt.setText("Giải mã");
        btn_Decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DecryptActionPerformed(evt);
            }
        });
        add(btn_Decrypt, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 260, 100, 34));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 0));
        jLabel7.setText("Số CMND:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 170, 93, -1));

        btnGroup.add(rdo_GiaoDien);
        rdo_GiaoDien.setLabel("Mã hóa trên giao diện");
        add(rdo_GiaoDien, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 220, -1, -1));

        btnGroup.add(rdo_Ham);
        rdo_Ham.setLabel("Mã hóa dùng hàm");
        add(rdo_Ham, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 220, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_KhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_KhachHangMouseClicked
        // TODO add your handling code here:
        int selectedRow = tbl_KhachHang.getSelectedRow();
        if (selectedRow >= 0) {
            // Lấy dữ liệu từ dòng được chọn
            String maKH = tbl_KhachHang.getValueAt(selectedRow, 0).toString();
            String soCMND = tbl_KhachHang.getValueAt(selectedRow, 1).toString();
            String tenKH = tbl_KhachHang.getValueAt(selectedRow, 2).toString();
            String SDT = tbl_KhachHang.getValueAt(selectedRow, 3).toString();
            String gioiTinh = tbl_KhachHang.getValueAt(selectedRow, 4).toString();
            
            if(gioiTinh.equals("Nam"))
            {
                rdo_Nam.setSelected(true);
            }
            else
            {
                rdo_Nu.setSelected(true);
            }
           
            // Hiển thị dữ liệu trong các JTextField tương ứng
            txt_MaKhachHang.setText(maKH);
            txt_CMND.setText(soCMND);
            txt_TenKhachHang.setText(tenKH);
            txt_SoDT.setText(SDT);
        }
    }//GEN-LAST:event_tbl_KhachHangMouseClicked

    private void btn_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemActionPerformed
        // TODO add your handling code here
        KhachHang kh = new KhachHang();
        kh.setSoCMND(txt_CMND.getText());
        kh.setTenKH(txt_TenKhachHang.getText());
        kh.setSDT(txt_SoDT.getText());
        if (rdo_Nam.isSelected()) {
            kh.setGioiTinh("Nam");
        } else if (rdo_Nu.isSelected()) {
            kh.setGioiTinh("Nữ");
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn giới tính!");
            return;
        }
       

        // Gọi phương thức thêm sách từ lớp SachDAO
        boolean success = KhachHangDao.themKhachHang(kh);
        if (success) {
            // Thông báo thành công
            JOptionPane.showMessageDialog(this, "Thêm khách hàng thành công!");
            // Cập nhật lại danh sách sách trên giao diện
            hienThi();
        } else {
            // Thông báo thất bại
            JOptionPane.showMessageDialog(this, "Thêm khách hàng thất bại!");
        }
    }//GEN-LAST:event_btn_ThemActionPerformed

    private void btn_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaActionPerformed
        // TODO add your handling code here:
        int maKH = Integer.parseInt(txt_MaKhachHang.getText());
        int confirmed = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa lớp này không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (confirmed == JOptionPane.YES_OPTION) {
            boolean success = KhachHangDao.xoaKhachHang(maKH);
            if (success) {
                // Thông báo thành công
                JOptionPane.showMessageDialog(this, "Xóa khách hàng thành công!");
                // Cập nhật lại danh sách trên giao diện
                hienThi();
            } else {
                // Thông báo thất bại
                JOptionPane.showMessageDialog(this, "Xóa khách hàng thất bại!");
            }
        }
       
    }//GEN-LAST:event_btn_XoaActionPerformed

    private void btn_SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SuaActionPerformed
        // TODO add your handling code here:
        KhachHang kh = new KhachHang();
        int maKH = Integer.parseInt(txt_MaKhachHang.getText());
        kh.setMaKH(maKH);        
        kh.setSoCMND(txt_CMND.getText());
        kh.setTenKH(txt_TenKhachHang.getText());
        kh.setSDT(txt_SoDT.getText());
        if (rdo_Nam.isSelected()) {
            kh.setGioiTinh("Nam");
        } else if (rdo_Nu.isSelected()) {
            kh.setGioiTinh("Nữ");
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn giới tính!");
            return;
        }
       
        // Khởi tạo thông tin sách từ các trường dữ liệu trên giao diện

        // Gọi phương thức thêm sách từ lớp SachDAO
        boolean success = KhachHangDao.capNhatKhachHang(kh);
        if (success) {
            // Thông báo thành công
            JOptionPane.showMessageDialog(this, "Cập nhật khách hàng thành công!");
            // Cập nhật lại danh sách sách trên giao diện
            hienThi();
        } else {
            // Thông báo thất bại
            JOptionPane.showMessageDialog(this, "Cập nhật khách hàng thất bại!");
        }
    }//GEN-LAST:event_btn_SuaActionPerformed

    private void btn_TimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimActionPerformed
        // TODO add your handling code here:
        String keyword = txt_Search.getText().trim().toLowerCase();
        // Get the list of all customers
        ArrayList<KhachHang> ds = KhachHangDao.layDanhSachKhachHang();

        // Create a list to store the search results
        ArrayList<KhachHang> searchResults = new ArrayList<>();

        // Loop through the customer list and add matching customers to the searchResults list
        for (KhachHang kh : ds) {
            if (kh.getSoCMND().toLowerCase().contains(keyword) ||
                kh.getTenKH().toLowerCase().contains(keyword) ||
                kh.getSDT().toLowerCase().contains(keyword) ||
                kh.getGioiTinh().toLowerCase().contains(keyword)) {
                searchResults.add(kh);
            }
        }

        // Update the table with the search results
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("Mã khách hàng");
        dtm.addColumn("Số CMND");
        dtm.addColumn("Tên khách hàng");
        dtm.addColumn("SDT");
        dtm.addColumn("Giới tính");
        dtm.setNumRows(searchResults.size());

        for (int i = 0; i < searchResults.size(); i++) {
            KhachHang kh = searchResults.get(i);
            dtm.setValueAt(kh.getMaKH(), i, 0);
            dtm.setValueAt(kh.getSoCMND(), i, 1);
            dtm.setValueAt(kh.getTenKH(), i, 2);
            dtm.setValueAt(kh.getSDT(), i, 3);
            dtm.setValueAt(kh.getGioiTinh(), i, 4);
        }

        tbl_KhachHang.setModel(dtm);
    }//GEN-LAST:event_btn_TimActionPerformed

    private void txt_SearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SearchKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txt_SearchKeyPressed

    private void txt_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_SearchActionPerformed

    private void txt_CMNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_CMNDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_CMNDActionPerformed

    private void txt_MaKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_MaKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_MaKhachHangActionPerformed

    private void txt_SoDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SoDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_SoDTActionPerformed

    private void btn_LamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LamMoiActionPerformed
        // TODO add your handling code here:
        txt_MaKhachHang.setText("");
        txt_CMND.setText("");
        txt_SoDT.setText("");
        txt_TenKhachHang.setText("");
        txt_Search.setText("");
        buttonGroup1.clearSelection();
    }//GEN-LAST:event_btn_LamMoiActionPerformed

    private void btn_EncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EncryptActionPerformed
        // TODO add your handling code here:
        if (!btn_Encrypt.isEnabled()) {
        return;
    }

    // Kiểm tra RadioButton
    if (rdo_Ham.isSelected()) {
        try (Connection conn = Connect.getConnection()) { // Sử dụng phương thức kết nối chuẩn hóa
            String sql = "{? = call encryptCaesarCipher(?, ?)}";
            CallableStatement stmt = conn.prepareCall(sql);

            // Đặt các tham số đầu vào và đầu ra
            stmt.registerOutParameter(1, java.sql.Types.VARCHAR); // Kết quả trả về
            stmt.setString(2, txt_SoDT.getText()); // Giá trị cần mã hóa (Số điện thoại)

            // Lấy giá trị từ JSpinner nb_key
            int k = (Integer) nb_key.getValue(); // Chuyển giá trị của nb_key thành int

            // Đặt tham số k vào câu lệnh SQL
            stmt.setInt(3, k); // Sử dụng giá trị từ JSpinner làm tham số k

            // Thực hiện lệnh
            stmt.execute();

            // Lấy kết quả
            String encryptedSDT = stmt.getString(1);

            // Hiển thị kết quả mã hóa
            JOptionPane.showMessageDialog(this, "Mã hóa bằng Oracle thành công: " + encryptedSDT);

            // Lưu encryptedSDT vào cơ sở dữ liệu
            String insertSQL = "UPDATE KhachHang SET SDT = ? WHERE MAKH = ?";
            try (PreparedStatement pstmt = conn.prepareStatement(insertSQL)) {
                pstmt.setString(1, encryptedSDT); // Giá trị mã hóa
                pstmt.setInt(2, Integer.parseInt(txt_MaKhachHang.getText()));

                int rowsAffected = pstmt.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Lưu mã hóa xuống cơ sở dữ liệu thành công!");
                    hienThi();
                } else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy khách hàng với số điện thoại này để cập nhật.");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi mã hóa bằng Oracle: " + e.getMessage());
        }
        return;
    }

    if (rdo_GiaoDien.isSelected()) {
        // Thực hiện công việc mã hóa khi chọn rdo_GiaoDien
        KhachHang kh = new KhachHang();
        
        int maKH = Integer.parseInt(txt_MaKhachHang.getText());
        kh.setMaKH(maKH);
        kh.setSoCMND(txt_CMND.getText());
        kh.setTenKH(txt_TenKhachHang.getText());
        kh.setSDT(txt_SoDT.getText());

        // Kiểm tra giới tính
        if (rdo_Nam.isSelected()) {
            kh.setGioiTinh("Nam");
        } else if (rdo_Nu.isSelected()) {
            kh.setGioiTinh("Nữ");
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn giới tính!");
            return;
        }

        // Gọi phương thức mã hóa từ KhachHangDao
        boolean success = KhachHangDao.maHoaKhachHang(kh);
        if (success) {
            // Thông báo thành công
            JOptionPane.showMessageDialog(this, "Mã hóa SDT khách hàng thành công!");
            hienThi(); // Cập nhật giao diện
            btn_Encrypt.setEnabled(false);
            btn_Decrypt.setEnabled(true);
        } else {
            // Thông báo thất bại
            JOptionPane.showMessageDialog(this, "Mã hóa SDT khách hàng thất bại!");
        }
    } else {
        // Nếu không chọn radio nào
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một tùy chọn!");
    }
    }//GEN-LAST:event_btn_EncryptActionPerformed

    private void btn_DecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DecryptActionPerformed
        // TODO add your handling code here:
        if (!btn_Decrypt.isEnabled()) {
        return;
    }

    // Nếu RadioButton rdo_Ham được chọn
    if (rdo_Ham.isSelected()) {
        try (Connection conn = Connect.getConnection()) { // Kết nối cơ sở dữ liệu
            String sql = "{? = call decryptCaesarCipher(?, ?)}"; // Gọi hàm decrypt từ Oracle
            CallableStatement stmt = conn.prepareCall(sql);

            // Đặt các tham số đầu vào và đầu ra
            stmt.registerOutParameter(1, java.sql.Types.VARCHAR); // Kết quả trả về
            stmt.setString(2, txt_SoDT.getText()); // Giá trị cần giải mã (Số điện thoại mã hóa)
            int k = (Integer) nb_key.getValue(); // Lấy giá trị từ JSpinner
            stmt.setInt(3, k); // Tham số k (độ dịch ngược)

            // Thực thi câu lệnh
            stmt.execute();

            // Lấy kết quả giải mã
            String decryptedSDT = stmt.getString(1);

            // Cập nhật cơ sở dữ liệu với số điện thoại đã giải mã
            String updateSQL = "UPDATE KhachHang SET SDT = ? WHERE MAKH = ?";
            try (PreparedStatement pstmt = conn.prepareStatement(updateSQL)) {
                pstmt.setString(1, decryptedSDT); // Giá trị sau khi giải mã
                pstmt.setInt(2, Integer.parseInt(txt_MaKhachHang.getText())); // MAKH từ ô nhập liệu

                int rowsAffected = pstmt.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Giải mã và lưu số điện thoại xuống cơ sở dữ liệu thành công: " + decryptedSDT);
                    hienThi();
                } else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy khách hàng với MAKH này để cập nhật.");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi giải mã bằng Oracle: " + e.getMessage());
        }
        return;
    }

    // Nếu RadioButton rdo_GiaoDien được chọn
    if (rdo_GiaoDien.isSelected()) {
        // Khởi tạo đối tượng KhachHang
        KhachHang kh = new KhachHang();
        int maKH = Integer.parseInt(txt_MaKhachHang.getText());
        kh.setMaKH(maKH);
        kh.setSoCMND(txt_CMND.getText());
        kh.setTenKH(txt_TenKhachHang.getText());
        kh.setSDT(txt_SoDT.getText());

        // Kiểm tra giới tính
        if (rdo_Nam.isSelected()) {
            kh.setGioiTinh("Nam");
        } else if (rdo_Nu.isSelected()) {
            kh.setGioiTinh("Nữ");
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn giới tính!");
            return;
        }

        // Gọi phương thức giải mã từ KhachHangDao
        boolean success = KhachHangDao.giaiMaKhachHang(kh);
        if (success) {
            // Thông báo thành công
            JOptionPane.showMessageDialog(this, "Giải mã SDT khách hàng thành công!");
            // Cập nhật lại danh sách
            hienThi();
            btn_Decrypt.setEnabled(false);
            btn_Encrypt.setEnabled(true);
        } else {
            // Thông báo thất bại
            JOptionPane.showMessageDialog(this, "Giải mã SDT khách hàng thất bại!");
        }
    } else {
        // Nếu không chọn radio nào
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một tùy chọn!");
    }
    }//GEN-LAST:event_btn_DecryptActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JButton btn_Decrypt;
    private javax.swing.JButton btn_Encrypt;
    private javax.swing.JButton btn_LamMoi;
    public javax.swing.JButton btn_Sua;
    public javax.swing.JButton btn_Them;
    public javax.swing.JButton btn_Tim;
    public javax.swing.JButton btn_Xoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner nb_key;
    private javax.swing.JRadioButton rdo_GiaoDien;
    private javax.swing.JRadioButton rdo_Ham;
    public javax.swing.JRadioButton rdo_Nam;
    public javax.swing.JRadioButton rdo_Nu;
    public javax.swing.JTable tbl_KhachHang;
    public javax.swing.JTextField txt_CMND;
    public javax.swing.JTextField txt_MaKhachHang;
    public javax.swing.JTextField txt_Search;
    public javax.swing.JTextField txt_SoDT;
    public javax.swing.JTextField txt_TenKhachHang;
    // End of variables declaration//GEN-END:variables
}
